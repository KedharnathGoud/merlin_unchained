# Generated by Django 3.2.6 on 2021-09-23 14:50

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Devices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.TextField()),
                ('alias', models.TextField()),
                ('device_type', models.TextField()),
                ('os', models.TextField()),
                ('username', models.TextField()),
                ('password', models.TextField()),
                ('protocol', models.TextField()),
                ('ip_address', models.TextField()),
                ('port', models.TextField()),
                ('connection_timeout', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='DynamicJobInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_field', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='LearnACL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pyats_alias', models.TextField()),
                ('os', models.TextField()),
                ('acl', models.TextField()),
                ('ace', models.TextField()),
                ('permission', models.TextField()),
                ('logging', models.TextField()),
                ('source_network', models.TextField()),
                ('destination_network', models.TextField()),
                ('l3_protocol', models.TextField()),
                ('l4_protocol', models.TextField()),
                ('operator', models.TextField()),
                ('port', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='LearnARP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pyats_alias', models.TextField()),
                ('os', models.TextField()),
                ('interface', models.TextField()),
                ('neighbor_ip', models.TextField()),
                ('neighbor_mac', models.TextField()),
                ('origin', models.TextField()),
                ('local_proxy', models.TextField()),
                ('proxy', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='LearnARPStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pyats_alias', models.TextField()),
                ('os', models.TextField()),
                ('entries_total', models.TextField()),
                ('in_drops', models.TextField()),
                ('in_replies_pkts', models.TextField()),
                ('in_requests_pkts', models.TextField()),
                ('incomplete_total', models.TextField()),
                ('out_replies_pkts', models.TextField()),
                ('out_requests_pkts', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='LearnBGPInstances',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pyats_alias', models.TextField()),
                ('os', models.TextField()),
                ('instance', models.TextField()),
                ('bgp_id', models.TextField()),
                ('protocol_state', models.TextField()),
                ('nexthop_trigger_delay_critical', models.TextField()),
                ('nexthop_trigger_delay_noncritical', models.TextField()),
                ('nexthop_trigger_enabled', models.TextField()),
                ('vrf', models.TextField()),
                ('router_id', models.TextField()),
                ('cluster_id', models.TextField()),
                ('confederation_id', models.TextField()),
                ('neighbor', models.TextField()),
                ('version', models.TextField()),
                ('hold_time', models.TextField()),
                ('keep_alive_interval', models.TextField()),
                ('local_as', models.TextField()),
                ('remote_as', models.TextField()),
                ('neighbor_counters_received_bytes_in_queue', models.TextField()),
                ('neighbor_counters_received_capability', models.TextField()),
                ('neighbor_counters_received_keepalives', models.TextField()),
                ('neighbor_counters_received_notifications', models.TextField()),
                ('neighbor_counters_received_opens', models.TextField()),
                ('neighbor_counters_received_route_refresh', models.TextField()),
                ('neighbor_counters_received_total', models.TextField()),
                ('neighbor_counters_received_total_bytes', models.TextField()),
                ('neighbor_counters_received_updates', models.TextField()),
                ('neighbor_counters_sent_bytes_in_queue', models.TextField()),
                ('neighbor_counters_sent_capability', models.TextField()),
                ('neighbor_counters_sent_keepalives', models.TextField()),
                ('neighbor_counters_sent_notifications', models.TextField()),
                ('neighbor_counters_sent_opens', models.TextField()),
                ('neighbor_counters_sent_route_refresh', models.TextField()),
                ('neighbor_counters_sent_total', models.TextField()),
                ('neighbor_counters_sent_total_bytes', models.TextField()),
                ('neighbor_counters_sent_updates', models.TextField()),
                ('last_reset', models.TextField()),
                ('reset_reason', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='LearnBGPRoutesPerPeer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pyats_alias', models.TextField()),
                ('os', models.TextField()),
                ('instance', models.TextField()),
                ('vrf', models.TextField()),
                ('neighbor', models.TextField()),
                ('advertised', models.TextField()),
                ('routes', models.TextField()),
                ('remote_as', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='LearnBGPTables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pyats_alias', models.TextField()),
                ('os', models.TextField()),
                ('instance', models.TextField()),
                ('vrf', models.TextField()),
                ('table_version', models.TextField()),
                ('prefix', models.TextField()),
                ('index', models.TextField()),
                ('localpref', models.TextField()),
                ('next_hop', models.TextField()),
                ('origin_code', models.TextField()),
                ('status_code', models.TextField()),
                ('weight', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='LearnConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pyats_alias', models.TextField()),
                ('os', models.TextField()),
                ('config', models.JSONField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='LearnInterface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pyats_alias', models.TextField()),
                ('os', models.TextField()),
                ('interface', models.TextField()),
                ('description', models.TextField()),
                ('enabled', models.TextField()),
                ('status', models.TextField()),
                ('access_vlan', models.TextField()),
                ('native_vlan', models.TextField()),
                ('switchport', models.TextField()),
                ('switchport_mode', models.TextField()),
                ('interface_type', models.TextField()),
                ('bandwidth', models.TextField()),
                ('auto_negotiate', models.TextField()),
                ('speed', models.TextField()),
                ('duplex', models.TextField()),
                ('mtu', models.TextField()),
                ('mac_address', models.TextField()),
                ('physical_address', models.TextField()),
                ('ip_address', models.TextField()),
                ('medium', models.TextField()),
                ('delay', models.TextField()),
                ('encapsulation', models.TextField()),
                ('flow_control_receive', models.TextField()),
                ('flow_control_send', models.TextField()),
                ('port_channel', models.TextField()),
                ('port_channel_member_interfaces', models.TextField()),
                ('port_channel_member', models.TextField()),
                ('last_change', models.TextField()),
                ('input_broadcast', models.TextField()),
                ('input_crc_errors', models.TextField()),
                ('input_errors', models.TextField()),
                ('input_mac_pause_frames', models.TextField()),
                ('input_multicast', models.TextField()),
                ('input_octets', models.TextField()),
                ('input_unicast', models.TextField()),
                ('input_unknown', models.TextField()),
                ('input_total', models.TextField()),
                ('output_broadcast', models.TextField()),
                ('output_discard', models.TextField()),
                ('output_errors', models.TextField()),
                ('output_mac_pause_frames', models.TextField()),
                ('output_multicast', models.TextField()),
                ('output_unicast', models.TextField()),
                ('output_total', models.TextField()),
                ('last_clear', models.TextField()),
                ('input_rate', models.TextField()),
                ('load_interval', models.TextField()),
                ('output_rate', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='LearnPlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pyats_alias', models.TextField()),
                ('os', models.TextField()),
                ('chassis', models.TextField()),
                ('chassis_sn', models.TextField()),
                ('disk_free_space', models.TextField()),
                ('disk_total_space', models.TextField()),
                ('disk_used_space', models.TextField()),
                ('image', models.TextField()),
                ('installed_packages', models.TextField()),
                ('main_mem', models.TextField()),
                ('rp_uptime', models.TextField()),
                ('rtr_type', models.TextField()),
                ('version', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='LearnPlatformSlots',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pyats_alias', models.TextField()),
                ('os', models.TextField()),
                ('slot', models.TextField()),
                ('slot_name', models.TextField()),
                ('slot_sn', models.TextField()),
                ('slot_state', models.TextField()),
                ('slot_redundancy_state', models.TextField()),
                ('rp_boot_image', models.TextField()),
                ('slot_rp_uptime', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='LearnPlatformVirtual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pyats_alias', models.TextField()),
                ('os', models.TextField()),
                ('virtual_device_name', models.TextField()),
                ('virtual_device_status', models.TextField()),
                ('virtual_device_member', models.TextField()),
                ('virtual_device_member_status', models.TextField()),
                ('virtual_device_member_type', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='LearnVLAN',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pyats_alias', models.TextField()),
                ('os', models.TextField()),
                ('vlan', models.TextField()),
                ('interfaces', models.TextField()),
                ('mode', models.TextField()),
                ('name', models.TextField()),
                ('shutdown', models.TextField()),
                ('state', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='LearnVRF',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pyats_alias', models.TextField()),
                ('os', models.TextField()),
                ('vrf', models.TextField()),
                ('address_family_ipv4', models.TextField()),
                ('address_family_ipv6', models.TextField()),
                ('route_distinguisher', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='ShowInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pyats_alias', models.TextField()),
                ('os', models.TextField()),
                ('part', models.TextField()),
                ('description', models.TextField()),
                ('pid', models.TextField()),
                ('serial_number', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='ShowIPIntBrief',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pyats_alias', models.TextField()),
                ('os', models.TextField()),
                ('interface', models.TextField()),
                ('interface_status', models.TextField()),
                ('ip_address', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='ShowVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pyats_alias', models.TextField()),
                ('bootflash', models.TextField()),
                ('chassis', models.TextField()),
                ('cpu', models.TextField()),
                ('device_name', models.TextField()),
                ('memory', models.TextField()),
                ('model', models.TextField()),
                ('processor_board_id', models.TextField()),
                ('rp', models.TextField()),
                ('slots', models.TextField()),
                ('days', models.TextField()),
                ('hours', models.TextField()),
                ('minutes', models.TextField()),
                ('seconds', models.TextField()),
                ('name', models.TextField()),
                ('os', models.TextField()),
                ('reason', models.TextField()),
                ('system_compile_time', models.TextField()),
                ('system_image_file', models.TextField()),
                ('system_version', models.TextField()),
                ('chassis_sn', models.TextField()),
                ('compiled_by', models.TextField()),
                ('curr_config_register', models.TextField()),
                ('image_id', models.TextField()),
                ('image_type', models.TextField()),
                ('label', models.TextField()),
                ('license_level', models.TextField()),
                ('license_type', models.TextField()),
                ('non_volatile', models.TextField()),
                ('physical', models.TextField()),
                ('next_reload_license_level', models.TextField()),
                ('platform', models.TextField()),
                ('processor_type', models.TextField()),
                ('returned_to_rom_by', models.TextField()),
                ('rom', models.TextField()),
                ('rtr_type', models.TextField()),
                ('uptime', models.TextField()),
                ('uptime_this_cp', models.TextField()),
                ('version_short', models.TextField()),
                ('xe_version', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
    ]
